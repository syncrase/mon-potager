

entity Plante {
}

entity NomVernaculaire {
    nom String unique required,
    description String
}

entity Reference {
    description String,
    type ReferenceType required,
}

enum ReferenceType {
    IMAGE, SOURCE
}

entity Url {
    url String unique
}

/**
* Fait le lien entre les différentes classifications
*/
entity Classification {}

/**
* Une classification est représentée par un set de rang ordonné possédant un parent récursivement jusqu'au rang taxonomique le plus haut, le Domaine
*/
entity CronquistRank {
    /**
    * Hauteur du rang : classe, ordre, espèce, etc.
    */
    rank CronquistTaxonomicRank required,
    /**
    * Nom du rang. Ex. Plantae<br/>
    * Nom requis, car peut-être un rang de liaison ne possédant pas de nom (null)<br/>
    * Doit être unique
    */
    nom String unique
}

entity APG {}

entity BenthamHooker {}

entity Wettstein {}

entity Thorne {}

entity Takhtajan {}

entity Engler {}

entity Candolle {}

entity Dahlgren {}

enum CronquistTaxonomicRank {
    DOMAINE (Domaine),
    SOUSDOMAINE (SuperRegne),
    SUPERREGNE (SuperRegne),
    REGNE (Regne),
    SOUSREGNE (SousRegne),
    RAMEAU (Rameau),
    INFRAREGNE (InfraRegne),
    SUPEREMBRANCHEMENT (SuperEmbranchement),
    EMBRANCHEMENT (Embranchement),
    SOUSEMBRANCHEMENT (SousEmbranchement),
    INFRAEMBRANCHEMENT (InfraEmbranchement),
    MICROEMBRANCHEMENT (MicroEmbranchement),
    SUPERCLASSE (SuperClasse),
    CLASSE (Classe),
    SOUSCLASSE (SousClasse),
    INFRACLASSE (InfraClasse),
    SUPERORDRE (SuperOrdre),
    ORDRE (Ordre),
    SOUSORDRE (SousOrdre),
    INFRAORDRE (InfraOrdre),
    MICROORDRE (MicroOrdre),
    SUPERFAMILLE (SuperFamille),
    FAMILLE (Famille),
    SOUSFAMILLE (SousFamille),
    TRIBU (Tribu),
    SOUSTRIBU (SousTribu),
    GENRE (Genre),
    SOUSGENRE (SousGenre),
    SECTION (Section),
    SOUSSECTION (SousSection),
    ESPECE (Espece),
    SOUSESPECE (SousEspece),
    VARIETE (Variete),
    SOUSVARIETE (SousVariete),
    FORME (Forme),
    SOUSFORME (SousForme)
}
//***********************************************************
//***********************************************************
// Plants associations
//***********************************************************
//***********************************************************

relationship ManyToMany {
    /**
    * Un même nom vernaculaire peut qualifier plusieurs plantes distinctes et très différentes
    */
    Plante{nomsVernaculaires(nom)} to NomVernaculaire{plantes},
    Plante{references} to Reference{plantes},
}

relationship ManyToOne {
    Reference{url} to Url{references}
}

//***********************************************************
//***********************************************************
// Classification associations
//***********************************************************
//***********************************************************

relationship OneToMany {
    /**
    * Défini une branche de classification de Cronquist
    */
    CronquistRank{children} to CronquistRank{parent},
}

relationship OneToOne {
    CronquistRank{classification} to Classification{cronquist},
    APG{classification} to Classification{apg},
    BenthamHooker{classification} to Classification{benthamHooker},
    Wettstein{classification} to Classification{wettstein},
    Thorne{classification} to Classification{thorne},
    Takhtajan{classification} to Classification{takhtajan},
    Engler{classification} to Classification{engler},
    Candolle{classification} to Classification{candolle},
    Dahlgren{classification} to Classification{dahlgren},
}

relationship ManyToOne {
    /**
    * Le nom latin d'une plante est la composition du genre et de l'espèce. De ce fait une plante est associée au minimum avec une espèce (ou tout autre rang entre l'espèce et le sous-genre).
    */
    Plante{classification} to Classification{plantes},
}

//***********************************************************
//***********************************************************
// Global options
//***********************************************************
//***********************************************************


paginate * with pagination
filter *



